name: Stack Deployment

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy Stack
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_CDK_ROLE_ARN }}
          role-session-name: js-assertion-cheat-sheet-stack-deployment
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        working-directory: cdk
        run: npm install

      - name: Deploy stack
        working-directory: cdk
        run: npm run deploy -- --require-approval never --outputs-file ./cdk-outputs.json

      - name: Set CDK variables
        run: |
          CDK_OUTPUT=$(cat ./cdk/cdk-outputs.json | jq '.JsAssertionCheatSheet')
          echo "AWS_BUCKET_NAME=$(echo $CDK_OUTPUT | jq -r '.BucketName')" >> $GITHUB_ENV
          echo "AWS_WEBSITE_URL=$(echo $CDK_OUTPUT | jq -r '.WebsiteUrl')" >> $GITHUB_ENV
          echo "AWS_DISTRIBUTION_ID=$(echo $CDK_OUTPUT | jq -r '.DistributionId')" >> $GITHUB_ENV

      - name: Set repository variables
        env:
          GH_TOKEN: ${{ secrets.GH_VARIABLES_TOKEN }}
        run: |
          gh variable set AWS_BUCKET_NAME --body "${{ env.AWS_BUCKET_NAME }}"
          gh variable set AWS_DISTRIBUTION_ID --body "${{ env.AWS_DISTRIBUTION_ID }}"
          gh variable set AWS_WEBSITE_URL --body "${{ env.AWS_WEBSITE_URL }}"
